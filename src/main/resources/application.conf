akka {
  loglevel = "INFO"
  stdout-loglevel = "INFO"
}

akka {
  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
;   log-config-on-start = on
}
### leveldb journal and snapshots config
akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.journal.leveldb.dir = "build/journal"
akka.persistence.snapshot-store.local.dir = "build/snapshots"

# akka.persistence.cassandra.journal.keyspace-autocreate = true
# akka.persistence.cassandra.journal.tables-autocreate = true
# akka.persistence.journal.plugin = "akka.persistence.cassandra.journal"
#
# akka.persistence.cassandra.snapshot.keyspace-autocreate = true
# akka.persistence.cassandra.snapshot.tables-autocreate = true
# akka.persistence.snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
#
#
# datastax-java-driver.advanced.reconnect-on-init = true
#
# datastax-java-driver {
# #   basic.contact-points = ["127.0.0.1:9042"]
#   basic.contact-points = ["cassandra:9042"]
#   basic.load-balancing-policy.local-datacenter = "datacenter1"
# }

# akka.persistence.journal.plugin = "my-dynamodb-journal"
#
# my-dynamodb-journal = ${dynamodb-journal} # include the default settings
# my-dynamodb-journal {                     # and add some overrides
#     journal-table =  ${?JOURNAL_TABLE_NAME}
#     journal-name =  "akka-persistence_"
#     aws-access-key-id =  ${?AWS_ACCESS_KEY_ID}
#     aws-secret-access-key = ${?AWS_SECRET_ACCESS_KEY}
#     endpoint =  ${?DYNAMODB_ENDPOINT}
# }
#
# akka.persistence.snapshot-store.plugin = "my-dynamodb-snapshot-store"
#
# my-dynamodb-snapshot-store = ${dynamodb-snapshot-store} # include the default settings
# my-dynamodb-snapshot-store {                     # and add some overrides
#     snapshot-table = ${?SNAPSHOTS_TABLE_NAME}
#     journal-name =  "akka-persistence_"
#
#     aws-access-key-id =  ${?AWS_ACCESS_KEY_ID}
#     aws-secret-access-key = ${?AWS_SECRET_ACCESS_KEY}
#     endpoint =  ${?DYNAMODB_ENDPOINT}
# }


akka {
  actor {
    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    }

     serialization-bindings {
       "com.blackmorse.telegrambotenglish.akka.Event" = jackson-json
       "com.blackmorse.telegrambotenglish.akka.states.State" = jackson-json
     }
  }
}